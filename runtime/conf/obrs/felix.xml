<repository name='Felix (OBR)' lastmodified='1247608975400'>
<resource id='org.apache.felix.javax.servlet/1.0.0' presentationname='Servlet 2.1 API' symbolicname='org.apache.felix.javax.servlet' uri='../bundles/org.apache.felix.javax.servlet-1.0.0.jar' version='1.0.0'>
  <description>
    Servlet 2.1 API
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/javax.servlet/1.0.0/javax.servlet-1.0.0.jar
  </remote-url>
  <size>
    30463
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Servlet 2.1 API'/>
    <p n='symbolicname' v='org.apache.felix.javax.servlet'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.servlet.http'/>
    <p n='uses:' v='javax.servlet'/>
    <p n='version' t='version' v='2.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.servlet'/>
    <p n='version' t='version' v='2.1.0'/>
  </capability>
</resource>
<resource id='org.apache.felix.shell/1.0.1' presentationname='Apache Felix Shell Service' symbolicname='org.apache.felix.shell' uri='../bundles/org.apache.felix.shell-1.0.1.jar' version='1.0.1'>
  <description>
    A simple OSGi command shell service.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.shell/1.0.1/org.apache.felix.shell-1.0.1.jar
  </remote-url>
  <size>
    51433
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.Command'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.ShellService'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.ungoverned.osgi.service.shell.ShellService'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Shell Service'/>
    <p n='symbolicname' v='org.apache.felix.shell'/>
    <p n='version' t='version' v='1.0.1'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.ShellService'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.ungoverned.osgi.service.shell.ShellService'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.ungoverned.osgi.service.shell'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.shell'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(service=org.apache.felix.shell.Command)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.shell.Command
  </require>
  <require extend='false' filter='(service=org.ungoverned.osgi.service.shell.Command)' multiple='true' name='service' optional='true'>
    Import Service org.ungoverned.osgi.service.shell.Command
  </require>
  <require extend='false' filter='(service=org.osgi.service.startlevel.StartLevel)' multiple='true' name='service' optional='false'>
    Import Service org.osgi.service.startlevel.StartLevel
  </require>
  <require extend='false' filter='(service=org.osgi.service.packageadmin.PackageAdmin)' multiple='true' name='service' optional='false'>
    Import Service org.osgi.service.packageadmin.PackageAdmin
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.packageadmin ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.startlevel ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.ungoverned.osgi.service.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.ungoverned.osgi.service.shell ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.bundlerepository/1.0.3' presentationname='Apache Felix Bundle Repository' symbolicname='org.apache.felix.bundlerepository' uri='../bundles/org.apache.felix.bundlerepository-1.0.3.jar' version='1.0.3'>
  <description>
    Bundle repository service.
  </description>
  <documentation>
    http://oscar-osgi.sf.net/obr2/org.apache.felix.bundlerepository/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.bundlerepository/1.0.3/org.apache.felix.bundlerepository-1.0.3.jar
  </remote-url>
  <size>
    130451
  </size>
  <source>
    http://oscar-osgi.sf.net/obr2/org.apache.felix.bundlerepository/org.apache.felix.bundlerepository-1.0.3-src.jar
  </source>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Bundle Repository'/>
    <p n='symbolicname' v='org.apache.felix.bundlerepository'/>
    <p n='version' t='version' v='1.0.3'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.obr.RepositoryAdmin'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.obr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.obr ;version=1.0.0
  </require>
</resource>
<resource id='org.osgi.compendium/4.0.0' presentationname='OSGi R4 Compendium Bundle' symbolicname='org.osgi.compendium' uri='../bundles/org.osgi.compendium-4.0.0.jar' version='4.0.0'>
  <description>
    OSGi Service Platform Release 4 Compendium Interfaces and Classes.
  </description>
  <documentation>
    http://www.osgi.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.osgi.compendium/1.0.1/org.osgi.compendium-1.0.1.jar
  </remote-url>
  <size>
    89541
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='OSGi R4 Compendium Bundle'/>
    <p n='symbolicname' v='org.osgi.compendium'/>
    <p n='version' t='version' v='4.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.io'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.http'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.util.measurement'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.provisioning'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.component'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.util.xml'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.wireadmin'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.event'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.upnp'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.device'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.util.tracker'/>
    <p n='version' t='version' v='1.3.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.prefs'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.util.position'/>
    <p n='uses:' v='org.osgi.util.measurement'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.useradmin'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.metatype'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
</resource>
<resource id='org.apache.felix.configadmin/1.0.1' presentationname='Apache Felix Configuration Admin Service' symbolicname='org.apache.felix.configadmin' uri='../bundles/org.apache.felix.configadmin-1.0.1.jar' version='1.0.1'>
  <description>
    Implementation of the OSGi Configuration Admin Service Specification
     1.2
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.configadmin/1.0.1/org.apache.felix.configadmin-1.0.1.jar
  </remote-url>
  <size>
    65213
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.cm.PersistenceManager'/>
    <p n='service.description' v='Platform Filesystem Persistence Manager'/>
    <p n='service.pid' v='org.apache.felix.cm.file.FilePersistenceManager'/>
    <p n='service.vendor' v='Apache Software Foundation'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.cm.ConfigurationAdmin'/>
    <p n='service.description' v='Configuration Admin Service Specification 1.2 Implementation'/>
    <p n='service.pid' v='org.apache.felix.cm.ConfigurationAdmin'/>
    <p n='service.vendor' v='Apache Software Foundation'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Configuration Admin Service'/>
    <p n='symbolicname' v='org.apache.felix.configadmin'/>
    <p n='version' t='version' v='1.0.1'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.cm.file'/>
    <p n='uses:' v='org.osgi.framework,org.apache.felix.cm'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.cm'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(service=org.osgi.service.cm.ManagedService)' multiple='true' name='service' optional='true'>
    Import Service org.osgi.service.cm.ManagedService
  </require>
  <require extend='false' filter='(service=org.osgi.service.cm.ManagedServiceFactory)' multiple='true' name='service' optional='true'>
    Import Service org.osgi.service.cm.ManagedServiceFactory
  </require>
  <require extend='false' filter='(service=org.osgi.service.cm.ConfigurationListener)' multiple='true' name='service' optional='true'>
    Import Service org.osgi.service.cm.ConfigurationListener
  </require>
  <require extend='false' filter='(service=org.apache.felix.cm.PersistenceManager)' multiple='false' name='service' optional='false'>
    Import Service org.apache.felix.cm.PersistenceManager
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.cm)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.cm ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.cm.file)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.cm.file ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.eventadmin/1.0.0' presentationname='Apache Felix EventAdmin' symbolicname='org.apache.felix.eventadmin' uri='../bundles/org.apache.felix.eventadmin-1.0.0.jar' version='1.0.0'>
  <description>
    This bundle provides an implementation of the OSGi R4 EventAdmin
     service.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.eventadmin/1.0.0/org.apache.felix.eventadmin-1.0.0.jar
  </remote-url>
  <size>
    73643
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix EventAdmin'/>
    <p n='symbolicname' v='org.apache.felix.eventadmin'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.event.EventAdmin'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.event'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.event.EventHandler)' multiple='true' name='service' optional='true'>
    Import Service org.osgi.service.event.EventHandler
  </require>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(service=org.osgi.service.log.LogReaderService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogReaderService
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.event ;version=1.1.0
  </require>
</resource>
<resource id='org.apache.felix.metatype/1.0.0' presentationname='Apache Felix Metatype Service' symbolicname='org.apache.felix.metatype' uri='../bundles/org.apache.felix.metatype-1.0.0.jar' version='1.0.0'>
  <description>
    Implementation of the OSGi Metatype Service Specification 1.1
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.metatype/1.0.0/org.apache.felix.metatype-1.0.0.jar
  </remote-url>
  <size>
    62262
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.osgi.service.metatype.MetaTypeService'/>
    <p n='service.pid' v='org.apache.felix.metatype.MetaTypeService'/>
    <p n='service.vendor' v='Apache Software Foundation'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Metatype Service'/>
    <p n='symbolicname' v='org.apache.felix.metatype'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.metatype'/>
    <p n='uses:' v='org.osgi.framework,org.osgi.service.metatype'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.metatype'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.metatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.metatype
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.metatype ;version=1.1.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.prefs/1.0.2' presentationname='Apache Felix Prefrences Service' symbolicname='org.apache.felix.prefs' uri='../bundles/org.apache.felix.prefs-1.0.2.jar' version='1.0.2'>
  <description>
    Implementation of the OSGi Preferences Service Specification
     1.1
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.prefs/1.0.2/org.apache.felix.prefs-1.0.2.jar
  </remote-url>
  <size>
    42409
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.osgi.service.prefs.PreferencesService'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Prefrences Service'/>
    <p n='symbolicname' v='org.apache.felix.prefs'/>
    <p n='version' t='version' v='1.0.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.prefs'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.prefs'/>
    <p n='uses:' v='org.osgi.service.prefs'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(service=org.apache.felix.prefs.BackingStore)' multiple='false' name='service' optional='true'>
    Import Service org.apache.felix.prefs.BackingStore
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.prefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.prefs
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.prefs ;version=1.1.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.scr/1.0.0' presentationname='Apache Felix Declarative Services' symbolicname='org.apache.felix.scr' uri='../bundles/org.apache.felix.scr-1.0.0.jar' version='1.0.0'>
  <description>
    Implementation of the Declarative Services specification 1.0
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.scr/1.0.0/org.apache.felix.scr-1.0.0.jar
  </remote-url>
  <size>
    106973
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.scr.ScrService'/>
    <p n='service.description' v='Declarative Services Management Agent'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.Command'/>
  </capability>
  <capability name='service.component.runtime'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Declarative Services'/>
    <p n='symbolicname' v='org.apache.felix.scr'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.component'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.scr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.scr ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.component ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.shell.tui/1.0.1' presentationname='Apache Felix Shell TUI' symbolicname='org.apache.felix.shell.tui' uri='../bundles/org.apache.felix.shell.tui-1.0.1.jar' version='1.0.1'>
  <description>
    A simple textual user interface for Felix' shell service.
  </description>
  <documentation>
    http://oscar-osgi.sf.net/obr2/org.apache.felix.shell.tui/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.shell.tui/1.0.1/org.apache.felix.shell.tui-1.0.1.jar
  </remote-url>
  <size>
    12223
  </size>
  <source>
    http://oscar-osgi.sf.net/obr2/org.apache.felix.shell.tui/org.apache.felix.shell.tui-1.0.1-src.jar
  </source>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Shell TUI'/>
    <p n='symbolicname' v='org.apache.felix.shell.tui'/>
    <p n='version' t='version' v='1.0.1'/>
  </capability>
  <require extend='false' filter='(service=org.apache.felix.shell.ShellService)' multiple='false' name='service' optional='false'>
    Import Service org.apache.felix.shell.ShellService
  </require>
  <require extend='false' filter='(service=org.apache.felix.shell.ShellService)' multiple='true' name='service' optional='false'>
    Import Service org.apache.felix.shell.ShellService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.scr/1.0.2' presentationname='Apache Felix Declarative Services' symbolicname='org.apache.felix.scr' uri='../bundles/org.apache.felix.scr-1.0.2.jar' version='1.0.2'>
  <description>
    Implementation of the Declarative Services specification 1.0
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.scr/1.0.2/org.apache.felix.scr-1.0.2.jar
  </remote-url>
  <size>
    109558
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.scr.ScrService'/>
    <p n='service.description' v='Declarative Services Management Agent'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.Command'/>
  </capability>
  <capability name='service.component.runtime'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Declarative Services'/>
    <p n='symbolicname' v='org.apache.felix.scr'/>
    <p n='version' t='version' v='1.0.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.component'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.scr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=1.0.2))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.scr ;version=1.0.2
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.component ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.org.apache.felix.ipojo/0.8.0' presentationname='Apache Felix iPOJO' symbolicname='org.apache.felix.org.apache.felix.ipojo' uri='../bundles/org.apache.felix.org.apache.felix.ipojo-0.8.0.jar' version='0.8.0'>
  <description>
    iPOJO Core Framework
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-ipojo.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo/0.8.0/org.apache.felix.ipojo-0.8.0.jar
  </remote-url>
  <size>
    181570
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='controller'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='callback'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='requires'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='provides'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='properties'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='architecture'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO'/>
    <p n='symbolicname' v='org.apache.felix.org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.util'/>
    <p n='uses:' v='org.apache.felix.ipojo.context,org.osgi.service.log,org.apache.felix.ipojo.metadata,org.osgi.framework,org.apache.felix.ipojo.parser,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.context'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.osgi.framework,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.dependency'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.architecture,org.osgi.framework,org.apache.felix.ipojo.parser,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.architecture'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.metadata,org.osgi.framework,org.apache.felix.ipojo,org.osgi.service.cm'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.metadata'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.parser'/>
    <p n='uses:' v='org.apache.felix.ipojo.metadata,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.context,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.architecture,org.osgi.framework,org.apache.felix.ipojo.parser,org.osgi.service.cm'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.providedservice'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.handlers.dependency,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.architecture,org.osgi.framework,org.apache.felix.ipojo.parser,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.arch/0.8.0' presentationname='Apache Felix iPOJO Arch Command' symbolicname='org.apache.felix.ipojo.arch' uri='../bundles/org.apache.felix.ipojo.arch-0.8.0.jar' version='0.8.0'>
  <description>
    iPOJO Arch command for Felix
  </description>
  <documentation>
    http://felix.apache.org/site/architecture-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.arch/0.8.0/org.apache.felix.ipojo.arch-0.8.0.jar
  </remote-url>
  <size>
    12569
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='iPOJO Arch Felix Command'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.arch'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <require extend='false' filter='(&amp;(name=requires)(namespace=org.apache.felix.ipojo)(type=primitive))' multiple='false' name='ipojo.handler' optional='false'>
    Require Handler
  </require>
  <require extend='false' filter='(service=org.apache.felix.ipojo.architecture.Architecture)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.ipojo.architecture.Architecture
  </require>
  <require extend='false' filter='(service=org.apache.felix.ipojo.Factory)' multiple='false' name='service' optional='true'>
    Import Service org.apache.felix.ipojo.Factory
  </require>
  <require extend='false' filter='(service=org.apache.felix.ipojo.HandlerFactory)' multiple='false' name='service' optional='true'>
    Import Service org.apache.felix.ipojo.HandlerFactory
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.org.apache.felix.ipojo.composite/0.8.1' presentationname='Apache Felix iPOJO Composite' symbolicname='org.apache.felix.org.apache.felix.ipojo.composite' uri='../bundles/org.apache.felix.org.apache.felix.ipojo.composite-0.8.1.jar' version='0.8.1'>
  <description>
    iPOJO Composititon Framework
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-ipojo.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.composite/0.8.1/org.apache.felix.ipojo.composite-0.8.1.jar
  </remote-url>
  <size>
    242407
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='instance'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='subservice'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='provides'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='architecture'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Composite'/>
    <p n='symbolicname' v='org.apache.felix.org.apache.felix.ipojo.composite'/>
    <p n='version' t='version' v='0.8.1'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.composite'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.context,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo.metadata,org.osgi.framework,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.context)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.context ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.temporal/0.8.1' presentationname='Apache Felix iPOJO Temporal Service Dependency Handler' symbolicname='org.apache.felix.ipojo.handler.temporal' uri='../bundles/org.apache.felix.ipojo.handler.temporal-0.8.1.jar' version='0.8.1'>
  <description>
    iPOJO Temporal Dependency Handler
  </description>
  <documentation>
    http://felix.apache.org/site/temporal-service-dependency.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.temporal/0.8.1/org.apache.felix.ipojo.handler.temporal-0.8.1.jar
  </remote-url>
  <size>
    13790
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='requires'/>
    <p n='namespace' v='org.apache.felix.ipojo.handler.temporal'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Temporal Service Dependency Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.temporal'/>
    <p n='version' t='version' v='0.8.1'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.extender.pattern/0.8.0' presentationname='Apache Felix iPOJO Extender Pattern Handler' symbolicname='org.apache.felix.ipojo.handler.extender.pattern' uri='../bundles/org.apache.felix.ipojo.handler.extender.pattern-0.8.0.jar' version='0.8.0'>
  <description>
    iPOJO Extender Pattern Handler
  </description>
  <documentation>
    http://felix.apache.org/site/extender-pattern-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.extender.pattern/0.8.0/org.apache.felix.ipojo.handler.extender.pattern-0.8.0.jar
  </remote-url>
  <size>
    14689
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='extender'/>
    <p n='namespace' v='org.apache.felix.ipojo.extender'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Extender Pattern Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.extender.pattern'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='ipojo.event.admin.handler.wbp/0.8.0' presentationname='Apache Felix iPOJO White Board Pattern Handler' symbolicname='ipojo.event.admin.handler.wbp' uri='../bundles/ipojo.event.admin.handler.wbp-0.8.0.jar' version='0.8.0'>
  <description>
    iPOJO White-Board Pattern Handler
  </description>
  <documentation>
    http://felix.apache.org/site/white-board-pattern-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.white.board.pattern/0.8.0/org.apache.felix.ipojo.handler.white.board.pattern-0.8.0.jar
  </remote-url>
  <size>
    12953
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='wbp'/>
    <p n='namespace' v='org.apache.felix.ipojo.white-board-pattern'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO White Board Pattern Handler'/>
    <p n='symbolicname' v='ipojo.event.admin.handler.wbp'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.8.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.8.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.upnp.basedriver/0.8.0' presentationname='Apache Felix UPnP Base Driver' symbolicname='org.apache.felix.upnp.basedriver' uri='../bundles/org.apache.felix.upnp.basedriver-0.8.0.jar' version='0.8.0'>
  <description>
    A Bundle implementation of the UPnP Service              Specification
     R4
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.upnp.basedriver/0.8.0/org.apache.felix.upnp.basedriver-0.8.0.jar
  </remote-url>
  <size>
    282181
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.upnp.basedriver.controller.DriverController'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.upnp.basedriver.controller.DevicesInfo'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix UPnP Base Driver'/>
    <p n='symbolicname' v='org.apache.felix.upnp.basedriver'/>
    <p n='version' t='version' v='0.8.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.upnp.basedriver.controller'/>
    <p n='version' t='version' v='0.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.upnp.basedriver.util'/>
    <p n='version' t='version' v='0.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.upnp.basedriver.resources'/>
    <p n='version' t='version' v='0.3.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.upnp)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.upnp ;version=1.1.0
  </require>
</resource>
<resource id='org.apache.felix.webconsole/1.0.0' presentationname='Apache Felix Web Management Console' symbolicname='org.apache.felix.webconsole' uri='../bundles/org.apache.felix.webconsole-1.0.0.jar' version='1.0.0'>
  <description>
    Web Based Management Console for OSGi Frameworks
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.webconsole/1.0.0/org.apache.felix.webconsole-1.0.0.jar
  </remote-url>
  <size>
    307474
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.webconsole.ConfigurationPrinter'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.cm.ManagedService'/>
    <p n='service.description' v='OSGi Management Console Configuration Receiver'/>
    <p n='service.pid' v='org.apache.felix.webconsole.internal.servlet.OsgiManager'/>
    <p n='service.vendor' v='he Apache Software Foundation'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Web Management Console'/>
    <p n='symbolicname' v='org.apache.felix.webconsole'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.webconsole'/>
    <p n='uses:' v='javax.servlet.http,javax.servlet'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Render)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Render
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Action)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Action
  </require>
  <require extend='false' filter='(service=org.osgi.service.http.HttpService)' multiple='false' name='service' optional='false'>
    Import Service org.osgi.service.http.HttpService
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet.http
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.bundlerepository.metadataparser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.bundlerepository.metadataparser
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.bundlerepository.metadataparser.kxmlsax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.bundlerepository.metadataparser.kxmlsax
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.scr
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.webconsole)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.webconsole
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.http
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.metatype
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.obr ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.packageadmin
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.prefs
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.startlevel
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker
  </require>
</resource>
<resource id='org.apache.felix.scr/1.0.4' presentationname='Apache Felix Declarative Services' symbolicname='org.apache.felix.scr' uri='../bundles/org.apache.felix.scr-1.0.4.jar' version='1.0.4'>
  <description>
    Implementation of the Declarative Services specification 1.0
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.scr/1.0.4/org.apache.felix.scr-1.0.4.jar
  </remote-url>
  <size>
    109599
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.scr.ScrService'/>
    <p n='service.description' v='Declarative Services Management Agent'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.Command'/>
    <p n='service.description' v='Declarative Services Shell Commands'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='service.component.runtime'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Declarative Services'/>
    <p n='symbolicname' v='org.apache.felix.scr'/>
    <p n='version' t='version' v='1.0.4'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.component'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.scr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.4'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=1.0.4))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.scr ;version=1.0.4
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.component ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.configadmin/1.0.4' presentationname='Apache Felix Configuration Admin Service' symbolicname='org.apache.felix.configadmin' uri='../bundles/org.apache.felix.configadmin-1.0.4.jar' version='1.0.4'>
  <description>
    Implementation of the OSGi Configuration Admin Service Specification
     1.2
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.configadmin/1.0.4/org.apache.felix.configadmin-1.0.4.jar
  </remote-url>
  <size>
    73325
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.cm.PersistenceManager'/>
    <p n='service.description' v='Platform Filesystem Persistence Manager'/>
    <p n='service.pid' v='org.apache.felix.cm.file.FilePersistenceManager'/>
    <p n='service.vendor' v='Apache Software Foundation'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.cm.ConfigurationAdmin'/>
    <p n='service.description' v='Configuration Admin Service Specification 1.2 Implementation'/>
    <p n='service.pid' v='org.apache.felix.cm.ConfigurationAdmin'/>
    <p n='service.vendor' v='Apache Software Foundation'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Configuration Admin Service'/>
    <p n='symbolicname' v='org.apache.felix.configadmin'/>
    <p n='version' t='version' v='1.0.4'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.cm.file'/>
    <p n='uses:' v='org.osgi.framework,org.apache.felix.cm'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.cm'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(service=org.apache.felix.cm.PersistenceManager)' multiple='true' name='service' optional='false'>
    Import Service org.apache.felix.cm.PersistenceManager
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.cm)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.cm ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.cm.file)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.cm.file ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.osgi.service.obr/1.0.0' presentationname='OSGi OBR Service API' symbolicname='org.osgi.service.obr' uri='../bundles/org.osgi.service.obr-1.0.0.jar' version='1.0.0'>
  <description>
    OSGi OBR Service API
  </description>
  <documentation>
    http://www.osgi.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.osgi.service.obr/1.0.2/org.osgi.service.obr-1.0.2.jar
  </remote-url>
  <size>
    11530
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='OSGi OBR Service API'/>
    <p n='symbolicname' v='org.osgi.service.obr'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.obr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.obr ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.org.apache.felix.shell.remote/1.0.2' presentationname='Apache Felix Remote Shell' symbolicname='org.apache.felix.org.apache.felix.shell.remote' uri='../bundles/org.apache.felix.org.apache.felix.shell.remote-1.0.2.jar' version='1.0.2'>
  <description>
    A simple remote textual user interface for Felix' shell service.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.shell.remote/1.0.2/org.apache.felix.shell.remote-1.0.2.jar
  </remote-url>
  <size>
    23913
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Remote Shell'/>
    <p n='symbolicname' v='org.apache.felix.org.apache.felix.shell.remote'/>
    <p n='version' t='version' v='1.0.2'/>
  </capability>
  <require extend='false' filter='(service=org.apache.felix.shell.ShellService)' multiple='false' name='service' optional='false'>
    Import Service org.apache.felix.shell.ShellService
  </require>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo/1.0.0' presentationname='Apache Felix iPOJO' symbolicname='org.apache.felix.ipojo' uri='../bundles/org.apache.felix.ipojo-1.0.0.jar' version='1.0.0'>
  <description>
    iPOJO Core Framework
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-ipojo.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo/1.0.0/org.apache.felix.ipojo-1.0.0.jar
  </remote-url>
  <size>
    190396
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='controller'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='callback'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='requires'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='provides'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='properties'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='architecture'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO'/>
    <p n='symbolicname' v='org.apache.felix.ipojo'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.util'/>
    <p n='uses:' v='org.apache.felix.ipojo.context,org.osgi.service.log,org.apache.felix.ipojo.metadata,org.osgi.framework,org.apache.felix.ipojo.parser,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.context'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.osgi.framework,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.dependency'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.architecture,org.osgi.framework,org.apache.felix.ipojo.parser,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.architecture'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.metadata,org.osgi.framework,org.apache.felix.ipojo,org.osgi.service.cm'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.metadata'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.parser'/>
    <p n='uses:' v='org.apache.felix.ipojo.metadata,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.context,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.architecture,org.osgi.framework,org.apache.felix.ipojo.parser,org.osgi.service.cm'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.providedservice'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.handlers.dependency,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.architecture,org.osgi.framework,org.apache.felix.ipojo.parser,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.arch/1.0.0' presentationname='Apache Felix iPOJO Arch Command' symbolicname='org.apache.felix.ipojo.arch' uri='../bundles/org.apache.felix.ipojo.arch-1.0.0.jar' version='1.0.0'>
  <description>
    iPOJO Arch command for Felix
  </description>
  <documentation>
    http://felix.apache.org/site/architecture-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.arch/1.0.0/org.apache.felix.ipojo.arch-1.0.0.jar
  </remote-url>
  <size>
    12552
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='iPOJO Arch Felix Command'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.arch'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(service=org.apache.felix.ipojo.architecture.Architecture)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.ipojo.architecture.Architecture
  </require>
  <require extend='false' filter='(service=org.apache.felix.ipojo.Factory)' multiple='false' name='service' optional='true'>
    Import Service org.apache.felix.ipojo.Factory
  </require>
  <require extend='false' filter='(service=org.apache.felix.ipojo.HandlerFactory)' multiple='false' name='service' optional='true'>
    Import Service org.apache.felix.ipojo.HandlerFactory
  </require>
  <require extend='false' filter='(&amp;(name=requires)(namespace=org.apache.felix.ipojo))' multiple='false' name='ipojo.handler' optional='false'>
    Requires Handler
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.org.apache.felix.ipojo.composite/1.0.0' presentationname='Apache Felix iPOJO Composite' symbolicname='org.apache.felix.org.apache.felix.ipojo.composite' uri='../bundles/org.apache.felix.org.apache.felix.ipojo.composite-1.0.0.jar' version='1.0.0'>
  <description>
    iPOJO Composititon Framework
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-ipojo.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.composite/1.0.0/org.apache.felix.ipojo.composite-1.0.0.jar
  </remote-url>
  <size>
    252224
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='instance'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='subservice'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='provides'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='architecture'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='iPOJO Composite'/>
    <p n='symbolicname' v='org.apache.felix.org.apache.felix.ipojo.composite'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.composite'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.context,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo.metadata,org.osgi.framework,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.context)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.context ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.eventadmin/1.0.0' presentationname='Apache Felix iPOJO Event Admin Handler' symbolicname='org.apache.felix.ipojo.handler.eventadmin' uri='../bundles/org.apache.felix.ipojo.handler.eventadmin-1.0.0.jar' version='1.0.0'>
  <description>
    iPOJO Event Admin Handlers
  </description>
  <documentation>
    http://felix.apache.org/site/event-admin-handlers.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.eventadmin/1.0.0/org.apache.felix.ipojo.handler.eventadmin-1.0.0.jar
  </remote-url>
  <size>
    25845
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='publisher'/>
    <p n='namespace' v='org.apache.felix.ipojo.handlers.event.EventAdminHandler'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='subscriber'/>
    <p n='namespace' v='org.apache.felix.ipojo.handlers.event.EventAdminHandler'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Event Admin Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.eventadmin'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.event.publisher'/>
    <p n='uses:' v='org.osgi.service.event,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.parser,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.event'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.event.subscriber'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.osgi.service.event,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo.metadata,org.osgi.framework,org.apache.felix.ipojo.parser,org.apache.felix.ipojo.handlers.event,org.apache.felix.ipojo'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.event.EventAdmin)' multiple='false' name='service' optional='false'>
    Import Event Admin service
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.event ;version=1.1.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.handlers.event.publisher)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.handlers.event.publisher
     ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.handlers.event)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.handlers.event ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.handlers.event.subscriber)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.handlers.event.subscriber
     ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.extender.pattern/1.0.0' presentationname='Apache Felix iPOJO Extender Pattern Handler' symbolicname='org.apache.felix.ipojo.handler.extender.pattern' uri='../bundles/org.apache.felix.ipojo.handler.extender.pattern-1.0.0.jar' version='1.0.0'>
  <description>
    iPOJO Extender Pattern Handler
  </description>
  <documentation>
    http://felix.apache.org/site/extender-pattern-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.extender/1.0.0/org.apache.felix.ipojo.handler.extender-1.0.0.jar
  </remote-url>
  <size>
    14598
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='extender'/>
    <p n='namespace' v='org.apache.felix.ipojo.extender'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Extender Pattern Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.extender.pattern'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.jmx/1.0.0' presentationname='Apache Felix iPOJO JMX Handler' symbolicname='org.apache.felix.ipojo.handler.jmx' uri='../bundles/org.apache.felix.ipojo.handler.jmx-1.0.0.jar' version='1.0.0'>
  <description>
    iPOJO JMX Handler
  </description>
  <documentation>
    http://felix.apache.org/site/ipojo-jmx-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.jmx/1.0.0/org.apache.felix.ipojo.handler.jmx-1.0.0.jar
  </remote-url>
  <size>
    29263
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='config'/>
    <p n='namespace' v='org.apache.felix.ipojo.handlers.jmx'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO JMX Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.jmx'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.management
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.temporal/1.0.0' presentationname='Apache Felix iPOJO Temporal Service Dependency Handler' symbolicname='org.apache.felix.ipojo.handler.temporal' uri='../bundles/org.apache.felix.ipojo.handler.temporal-1.0.0.jar' version='1.0.0'>
  <description>
    iPOJO Temporal Dependency Handler
  </description>
  <documentation>
    http://felix.apache.org/site/temporal-service-dependency.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.temporal/1.0.0/org.apache.felix.ipojo.handler.temporal-1.0.0.jar
  </remote-url>
  <size>
    15297
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='requires'/>
    <p n='namespace' v='org.apache.felix.ipojo.handler.temporal'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Temporal Service Dependency Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.temporal'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.handlers.dependency)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.handlers.dependency ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='ipojo.event.admin.handler.wbp/1.0.0' presentationname='Apache Felix iPOJO White Board Pattern Handler' symbolicname='ipojo.event.admin.handler.wbp' uri='../bundles/ipojo.event.admin.handler.wbp-1.0.0.jar' version='1.0.0'>
  <description>
    iPOJO White-Board Pattern Handler
  </description>
  <documentation>
    http://felix.apache.org/site/white-board-pattern-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.whiteboard/1.0.0/org.apache.felix.ipojo.handler.whiteboard-1.0.0.jar
  </remote-url>
  <size>
    12865
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='wbp'/>
    <p n='namespace' v='org.apache.felix.ipojo.white-board-pattern'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO White Board Pattern Handler'/>
    <p n='symbolicname' v='ipojo.event.admin.handler.wbp'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=0.9.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=0.9.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.webconsole/1.2.0' presentationname='Apache Felix Web Management Console' symbolicname='org.apache.felix.webconsole' uri='../bundles/org.apache.felix.webconsole-1.2.0.jar' version='1.2.0'>
  <description>
    Web Based Management Console for OSGi Frameworks. See
       http://felix.apache.org/apache-felix-web-console.html for
     more        information on this bundle.
  </description>
  <documentation>
    http://felix.apache.org/apache-felix-web-console.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.webconsole/1.2.0/org.apache.felix.webconsole-1.2.0.jar
  </remote-url>
  <size>
    409098
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.osgi.service.cm.ManagedService'/>
    <p n='service.description' v='OSGi Management Console Configuration Receiver'/>
    <p n='service.pid' v='org.apache.felix.webconsole.internal.servlet.OsgiManager'/>
    <p n='service.vendor' v='he Apache Software Foundation'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Web Management Console'/>
    <p n='symbolicname' v='org.apache.felix.webconsole'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.obr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.webconsole'/>
    <p n='uses:' v='javax.servlet.http,javax.servlet,org.osgi.framework'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(service=javax.servlet.Servlet)' multiple='true' name='service' optional='true'>
    Import Service javax.servlet.Servlet
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Render)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Render
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Action)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Action
  </require>
  <require extend='false' filter='(service=org.osgi.service.http.HttpService)' multiple='false' name='service' optional='false'>
    Import Service org.osgi.service.http.HttpService
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet.http
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.scr
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.webconsole)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.webconsole
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.cm
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.component
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.deploymentadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.deploymentadmin
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.http
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.log
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.metatype
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.obr ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.packageadmin
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.prefs
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.startlevel
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.xml.sax
  </require>
</resource>
<resource id='org.apache.felix.bundlerepository/1.2.0' presentationname='Apache Felix Bundle Repository' symbolicname='org.apache.felix.bundlerepository' uri='../bundles/org.apache.felix.bundlerepository-1.2.0.jar' version='1.2.0'>
  <description>
    Bundle repository service.
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-osgi-bundle-repository-obr.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.bundlerepository/1.2.0/org.apache.felix.bundlerepository-1.2.0.jar
  </remote-url>
  <size>
    134382
  </size>
  <source>
    http://felix.apache.org/site/downloads.cgi
  </source>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.Command'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.obr.RepositoryAdmin'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Bundle Repository'/>
    <p n='symbolicname' v='org.apache.felix.bundlerepository'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.obr.RepositoryAdmin'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.obr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.obr ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.shell/1.0.2' presentationname='Apache Felix Shell Service' symbolicname='org.apache.felix.shell' uri='../bundles/org.apache.felix.shell-1.0.2.jar' version='1.0.2'>
  <description>
    A simple OSGi command shell service.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.shell/1.0.2/org.apache.felix.shell-1.0.2.jar
  </remote-url>
  <size>
    51393
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.Command'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.ShellService'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.ungoverned.osgi.service.shell.ShellService'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Shell Service'/>
    <p n='symbolicname' v='org.apache.felix.shell'/>
    <p n='version' t='version' v='1.0.2'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.ShellService'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.ungoverned.osgi.service.shell.ShellService'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.ungoverned.osgi.service.shell'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.shell'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(service=org.apache.felix.shell.Command)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.shell.Command
  </require>
  <require extend='false' filter='(service=org.ungoverned.osgi.service.shell.Command)' multiple='true' name='service' optional='true'>
    Import Service org.ungoverned.osgi.service.shell.Command
  </require>
  <require extend='false' filter='(service=org.osgi.service.startlevel.StartLevel)' multiple='true' name='service' optional='false'>
    Import Service org.osgi.service.startlevel.StartLevel
  </require>
  <require extend='false' filter='(service=org.osgi.service.packageadmin.PackageAdmin)' multiple='true' name='service' optional='false'>
    Import Service org.osgi.service.packageadmin.PackageAdmin
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.4.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.packageadmin ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.startlevel ;version=1.1.0
  </require>
  <require extend='false' filter='(&amp;(package=org.ungoverned.osgi.service.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.ungoverned.osgi.service.shell ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.shell.tui/1.0.2' presentationname='Apache Felix Shell TUI' symbolicname='org.apache.felix.shell.tui' uri='../bundles/org.apache.felix.shell.tui-1.0.2.jar' version='1.0.2'>
  <description>
    A simple textual user interface for Felix' shell service.
  </description>
  <documentation>
    http://oscar-osgi.sf.net/obr2/org.apache.felix.shell.tui/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.shell.tui/1.0.2/org.apache.felix.shell.tui-1.0.2.jar
  </remote-url>
  <size>
    12238
  </size>
  <source>
    http://oscar-osgi.sf.net/obr2/org.apache.felix.shell.tui/org.apache.felix.shell.tui-1.0.2-src.jar
  </source>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Shell TUI'/>
    <p n='symbolicname' v='org.apache.felix.shell.tui'/>
    <p n='version' t='version' v='1.0.2'/>
  </capability>
  <require extend='false' filter='(service=org.apache.felix.shell.ShellService)' multiple='false' name='service' optional='false'>
    Import Service org.apache.felix.shell.ShellService
  </require>
  <require extend='false' filter='(service=org.apache.felix.shell.ShellService)' multiple='true' name='service' optional='false'>
    Import Service org.apache.felix.shell.ShellService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.4.0
  </require>
</resource>
<resource id='org.apache.felix.scr/1.0.6' presentationname='Apache Felix Declarative Services' symbolicname='org.apache.felix.scr' uri='../bundles/org.apache.felix.scr-1.0.6.jar' version='1.0.6'>
  <description>
    Implementation of the Declarative Services specification 1.0
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.scr/1.0.6/org.apache.felix.scr-1.0.6.jar
  </remote-url>
  <size>
    109751
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.scr.ScrService'/>
    <p n='service.description' v='Declarative Services Management Agent'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.Command'/>
    <p n='service.description' v='Declarative Services Shell Commands'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='service.component.runtime'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Declarative Services'/>
    <p n='symbolicname' v='org.apache.felix.scr'/>
    <p n='version' t='version' v='1.0.6'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.component'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.scr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.6'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=1.0.6))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.scr ;version=1.0.6
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.component ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.metatype/1.0.2' presentationname='Apache Felix Metatype Service' symbolicname='org.apache.felix.metatype' uri='../bundles/org.apache.felix.metatype-1.0.2.jar' version='1.0.2'>
  <description>
    Implementation of the OSGi Metatype Service Specification 1.1
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.metatype/1.0.2/org.apache.felix.metatype-1.0.2.jar
  </remote-url>
  <size>
    62355
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.osgi.service.metatype.MetaTypeService'/>
    <p n='service.description' v='MetaTypeService Specification 1.1 Implementation'/>
    <p n='service.pid' v='org.apache.felix.metatype.MetaTypeService'/>
    <p n='service.vendor' v='Apache Software Foundation'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Metatype Service'/>
    <p n='symbolicname' v='org.apache.felix.metatype'/>
    <p n='version' t='version' v='1.0.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.metatype'/>
    <p n='uses:' v='org.osgi.framework,org.osgi.service.metatype'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.metatype'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.metatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.metatype
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.metatype ;version=1.1.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.fileinstall/0.9.0' presentationname='Apache Felix File Install' symbolicname='org.apache.felix.fileinstall' uri='../bundles/org.apache.felix.fileinstall-0.9.0.jar' version='0.9.0'>
  <description>
    A utility to automatically install bundles from a directory.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.fileinstall/0.9.0/org.apache.felix.fileinstall-0.9.0.jar
  </remote-url>
  <size>
    26271
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix File Install'/>
    <p n='symbolicname' v='org.apache.felix.fileinstall'/>
    <p n='version' t='version' v='0.9.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.fileinstall'/>
    <p n='uses:' v='org.osgi.service.packageadmin,org.osgi.service.log,org.osgi.framework,org.osgi.util.tracker,org.osgi.service.cm'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.fileinstall
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.packageadmin ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.bundlerepository/1.2.1' presentationname='Apache Felix Bundle Repository' symbolicname='org.apache.felix.bundlerepository' uri='../bundles/org.apache.felix.bundlerepository-1.2.1.jar' version='1.2.1'>
  <description>
    Bundle repository service.
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-osgi-bundle-repository.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.bundlerepository/1.2.1/org.apache.felix.bundlerepository-1.2.1.jar
  </remote-url>
  <size>
    135821
  </size>
  <source>
    http://felix.apache.org/site/downloads.cgi
  </source>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.Command'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.obr.RepositoryAdmin'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Bundle Repository'/>
    <p n='symbolicname' v='org.apache.felix.bundlerepository'/>
    <p n='version' t='version' v='1.2.1'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.obr.RepositoryAdmin'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.obr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.obr ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.webconsole/1.2.2' presentationname='Apache Felix Web Management Console' symbolicname='org.apache.felix.webconsole' uri='../bundles/org.apache.felix.webconsole-1.2.2.jar' version='1.2.2'>
  <description>
    Web Based Management Console for OSGi Frameworks. See
       http://felix.apache.org/apache-felix-web-console.html for
     more        information on this bundle.
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-web-console.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.webconsole/1.2.2/org.apache.felix.webconsole-1.2.2.jar
  </remote-url>
  <size>
    440881
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.osgi.service.cm.ManagedService'/>
    <p n='service.description' v='OSGi Management Console Configuration Receiver'/>
    <p n='service.pid' v='org.apache.felix.webconsole.internal.servlet.OsgiManager'/>
    <p n='service.vendor' v='he Apache Software Foundation'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Web Management Console'/>
    <p n='symbolicname' v='org.apache.felix.webconsole'/>
    <p n='version' t='version' v='1.2.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.webconsole'/>
    <p n='uses:' v='javax.servlet,org.osgi.framework,javax.servlet.http'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.obr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(service=javax.servlet.Servlet)' multiple='true' name='service' optional='true'>
    Import Service javax.servlet.Servlet
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Render)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Render
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Action)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Action
  </require>
  <require extend='false' filter='(service=org.osgi.service.http.HttpService)' multiple='false' name='service' optional='false'>
    Import Service org.osgi.service.http.HttpService
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet.http
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.scr
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.webconsole)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.webconsole
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.cm
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.component
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.deploymentadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.deploymentadmin
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.event
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.http
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.log
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.metatype
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.obr ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.packageadmin
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.prefs
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.startlevel
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.xml.sax
  </require>
</resource>
<resource id='org.apache.felix.ipojo/1.2.0' presentationname='Apache Felix iPOJO' symbolicname='org.apache.felix.ipojo' uri='../bundles/org.apache.felix.ipojo-1.2.0.jar' version='1.2.0'>
  <description>
    iPOJO Core Framework
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-ipojo.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo/1.2.0/org.apache.felix.ipojo-1.2.0.jar
  </remote-url>
  <size>
    205539
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='controller'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='callback'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='requires'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='provides'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='properties'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='architecture'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO'/>
    <p n='symbolicname' v='org.apache.felix.ipojo'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.util'/>
    <p n='uses:' v='org.osgi.service.log,org.apache.felix.ipojo.context,org.apache.felix.ipojo,org.osgi.framework,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.parser'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.architecture'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo,org.osgi.framework,org.apache.felix.ipojo.handlers.configuration,org.osgi.service.cm,org.apache.felix.ipojo.metadata'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.context'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo,org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.dependency'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo,org.osgi.framework,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.parser'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.handlers.dependency,org.apache.felix.ipojo.handlers.providedservice,org.apache.felix.ipojo.parser,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo.context,org.osgi.framework,org.apache.felix.ipojo.handlers.configuration,org.apache.felix.ipojo.metadata,org.osgi.service.cm'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.configuration'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo,org.osgi.framework,org.osgi.service.cm,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.handlers.providedservice,org.apache.felix.ipojo.parser'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.metadata'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.providedservice'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo.handlers.dependency,org.apache.felix.ipojo,org.osgi.framework,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.parser'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.parser'/>
    <p n='uses:' v='org.apache.felix.ipojo,org.apache.felix.ipojo.metadata'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.composite/1.2.0' presentationname='Apache Felix iPOJO Composite' symbolicname='org.apache.felix.ipojo.composite' uri='../bundles/org.apache.felix.ipojo.composite-1.2.0.jar' version='1.2.0'>
  <description>
    iPOJO Composititon Framework
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-ipojo.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.composite/1.2.0/org.apache.felix.ipojo.composite-1.2.0.jar
  </remote-url>
  <size>
    253467
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='instance'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='subservice'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='provides'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='architecture'/>
    <p n='namespace' v='org.apache.felix.ipojo'/>
    <p n='type' v='composite'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Composite'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.composite'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.composite'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo.context,org.apache.felix.ipojo,org.osgi.framework,org.apache.felix.ipojo.metadata'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.context)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.context ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.eventadmin/1.2.0' presentationname='Apache Felix iPOJO Event Admin Handler' symbolicname='org.apache.felix.ipojo.handler.eventadmin' uri='../bundles/org.apache.felix.ipojo.handler.eventadmin-1.2.0.jar' version='1.2.0'>
  <description>
    iPOJO Event Admin Handlers
  </description>
  <documentation>
    http://felix.apache.org/site/event-admin-handlers.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.eventadmin/1.2.0/org.apache.felix.ipojo.handler.eventadmin-1.2.0.jar
  </remote-url>
  <size>
    26460
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='publisher'/>
    <p n='namespace' v='org.apache.felix.ipojo.handlers.event'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='ipojo.handler'>
    <p n='name' v='subscriber'/>
    <p n='namespace' v='org.apache.felix.ipojo.handlers.event'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Event Admin Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.eventadmin'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.event.publisher'/>
    <p n='uses:' v='org.osgi.service.event,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo.handlers.event,org.apache.felix.ipojo,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.parser'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.event'/>
    <p n='uses:' v='org.apache.felix.ipojo.parser'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.ipojo.handlers.event.subscriber'/>
    <p n='uses:' v='org.apache.felix.ipojo.util,org.osgi.service.event,org.apache.felix.ipojo.architecture,org.apache.felix.ipojo.handlers.event,org.apache.felix.ipojo,org.osgi.framework,org.apache.felix.ipojo.metadata,org.apache.felix.ipojo.parser'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.event.EventAdmin)' multiple='false' name='service' optional='false'>
    Import Event Admin service
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.event ;version=1.1.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.handlers.event.publisher)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.handlers.event.publisher
     ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.handlers.event)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.handlers.event ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.handlers.event.subscriber)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.handlers.event.subscriber
     ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.jmx/1.2.0' presentationname='Apache Felix iPOJO JMX Handler' symbolicname='org.apache.felix.ipojo.handler.jmx' uri='../bundles/org.apache.felix.ipojo.handler.jmx-1.2.0.jar' version='1.2.0'>
  <description>
    iPOJO JMX Handler
  </description>
  <documentation>
    http://felix.apache.org/site/ipojo-jmx-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.jmx/1.2.0/org.apache.felix.ipojo.handler.jmx-1.2.0.jar
  </remote-url>
  <size>
    29648
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='config'/>
    <p n='namespace' v='org.apache.felix.ipojo.handlers.jmx'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO JMX Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.jmx'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.management
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.extender/1.2.0' presentationname='Apache Felix iPOJO Extender Pattern Handler' symbolicname='org.apache.felix.ipojo.handler.extender' uri='../bundles/org.apache.felix.ipojo.handler.extender-1.2.0.jar' version='1.2.0'>
  <description>
    iPOJO Extender Pattern Handler
  </description>
  <documentation>
    http://felix.apache.org/site/extender-pattern-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.extender/1.2.0/org.apache.felix.ipojo.handler.extender-1.2.0.jar
  </remote-url>
  <size>
    14801
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='extender'/>
    <p n='namespace' v='org.apache.felix.ipojo.extender'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Extender Pattern Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.extender'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
</resource>
<resource id='ipojo.event.admin.handler.wbp/1.2.0' presentationname='Apache Felix iPOJO White Board Pattern Handler' symbolicname='ipojo.event.admin.handler.wbp' uri='../bundles/ipojo.event.admin.handler.wbp-1.2.0.jar' version='1.2.0'>
  <description>
    iPOJO White-Board Pattern Handler
  </description>
  <documentation>
    http://felix.apache.org/site/white-board-pattern-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.whiteboard/1.2.0/org.apache.felix.ipojo.handler.whiteboard-1.2.0.jar
  </remote-url>
  <size>
    13075
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='wbp'/>
    <p n='namespace' v='org.apache.felix.ipojo.whiteboard'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO White Board Pattern Handler'/>
    <p n='symbolicname' v='ipojo.event.admin.handler.wbp'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
</resource>
<resource id='org.apache.felix.ipojo.arch/1.2.0' presentationname='Apache Felix iPOJO Arch Command' symbolicname='org.apache.felix.ipojo.arch' uri='../bundles/org.apache.felix.ipojo.arch-1.2.0.jar' version='1.2.0'>
  <description>
    iPOJO Arch command for Felix
  </description>
  <documentation>
    http://felix.apache.org/site/architecture-handler.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.arch/1.2.0/org.apache.felix.ipojo.arch-1.2.0.jar
  </remote-url>
  <size>
    12932
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Arch Command'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.arch'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(service=org.apache.felix.ipojo.architecture.Architecture)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.ipojo.architecture.Architecture
  </require>
  <require extend='false' filter='(service=org.apache.felix.ipojo.Factory)' multiple='false' name='service' optional='true'>
    Import Service org.apache.felix.ipojo.Factory
  </require>
  <require extend='false' filter='(service=org.apache.felix.ipojo.HandlerFactory)' multiple='false' name='service' optional='true'>
    Import Service org.apache.felix.ipojo.HandlerFactory
  </require>
  <require extend='false' filter='(&amp;(name=requires)(namespace=org.apache.felix.ipojo))' multiple='false' name='ipojo.handler' optional='false'>
    Requires Handler
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
</resource>
<resource id='org.apache.felix.ipojo.handler.temporal/1.2.0' presentationname='Apache Felix iPOJO Temporal Service Dependency Handler' symbolicname='org.apache.felix.ipojo.handler.temporal' uri='../bundles/org.apache.felix.ipojo.handler.temporal-1.2.0.jar' version='1.2.0'>
  <description>
    iPOJO Temporal Dependency Handler
  </description>
  <documentation>
    http://felix.apache.org/site/temporal-service-dependency.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.ipojo.handler.temporal/1.2.0/org.apache.felix.ipojo.handler.temporal-1.2.0.jar
  </remote-url>
  <size>
    67772
  </size>
  <category id='org.apache.felix'/>
  <capability name='ipojo.handler'>
    <p n='name' v='requires'/>
    <p n='namespace' v='org.apache.felix.ipojo.handler.temporal'/>
    <p n='type' v='primitive'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix iPOJO Temporal Service Dependency Handler'/>
    <p n='symbolicname' v='org.apache.felix.ipojo.handler.temporal'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.util)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.util ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.architecture)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.architecture ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.handlers.dependency)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.handlers.dependency ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.metadata
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.ipojo.parser)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.ipojo.parser ;version=1.2.0
  </require>
</resource>
<resource id='org.apache.felix.webconsole/1.2.8' presentationname='Apache Felix Web Management Console' symbolicname='org.apache.felix.webconsole' uri='../bundles/org.apache.felix.webconsole-1.2.8.jar' version='1.2.8'>
  <description>
    Web Based Management Console for OSGi Frameworks. See
       http://felix.apache.org/apache-felix-web-console.html for
     more        information on this bundle.
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-web-console.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.webconsole/1.2.8/org.apache.felix.webconsole-1.2.8.jar
  </remote-url>
  <size>
    507030
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.osgi.service.cm.ManagedService'/>
    <p n='service.description' v='OSGi Management Console Configuration Receiver'/>
    <p n='service.pid' v='org.apache.felix.webconsole.internal.servlet.OsgiManager'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Web Management Console'/>
    <p n='symbolicname' v='org.apache.felix.webconsole'/>
    <p n='version' t='version' v='1.2.8'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.obr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.webconsole'/>
    <p n='uses:' v='javax.servlet.http,javax.servlet,org.osgi.framework'/>
    <p n='version' t='version' v='1.2.8'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(service=javax.servlet.Servlet)' multiple='true' name='service' optional='true'>
    Import Service javax.servlet.Servlet
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Render)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Render
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Action)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Action
  </require>
  <require extend='false' filter='(service=org.osgi.service.http.HttpService)' multiple='false' name='service' optional='false'>
    Import Service org.osgi.service.http.HttpService
  </require>
  <require extend='false' filter='(&amp;(package=javax.portlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.portlet
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet.http
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.scr
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.webconsole)(version&gt;=1.2.8))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.webconsole ;version=1.2.8
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.cm
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.component
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.deploymentadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.deploymentadmin
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.event
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.http
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.log
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.metatype
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.obr ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.packageadmin
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.prefs
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.startlevel
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.xml.sax
  </require>
</resource>
<resource id='org.apache.felix.log/1.0.0' presentationname='Apache Felix Log Service' symbolicname='org.apache.felix.log' uri='../bundles/org.apache.felix.log-1.0.0.jar' version='1.0.0'>
  <description>
    A simple implementation of the OSGi R4 Log service.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.log/1.0.0/org.apache.felix.log-1.0.0.jar
  </remote-url>
  <size>
    22290
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Log Service'/>
    <p n='symbolicname' v='org.apache.felix.log'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.log.LogService'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.log.LogReaderService'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.4.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.fileinstall/0.9.2' presentationname='Apache Felix File Install' symbolicname='org.apache.felix.fileinstall' uri='../bundles/org.apache.felix.fileinstall-0.9.2.jar' version='0.9.2'>
  <description>
    A utility to automatically install bundles from a directory.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.fileinstall/0.9.2/org.apache.felix.fileinstall-0.9.2.jar
  </remote-url>
  <size>
    32920
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix File Install'/>
    <p n='symbolicname' v='org.apache.felix.fileinstall'/>
    <p n='version' t='version' v='0.9.2'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.fileinstall'/>
    <p n='uses:' v='org.osgi.service.packageadmin,org.osgi.service.log,org.osgi.framework,org.osgi.util.tracker,org.apache.felix.fileinstall.util,org.osgi.service.cm'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.fileinstall.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.fileinstall
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.fileinstall.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.fileinstall.util
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.packageadmin ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.http.jetty/1.0.0' presentationname='Apache Felix HTTP Service Jetty' symbolicname='org.apache.felix.http.jetty' uri='../bundles/org.apache.felix.http.jetty-1.0.0.jar' version='1.0.0'>
  <description>
    An implementation of the OSGi HTTP Service
                using Jetty.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.http.jetty/1.0.0/org.apache.felix.http.jetty-1.0.0.jar
  </remote-url>
  <size>
    769497
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='HTTP Service'/>
    <p n='symbolicname' v='org.apache.felix.http.jetty'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.http.HttpService'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.http'/>
    <p n='uses' v='javax.servlet.http,javax.servlet'/>
    <p n='version' t='version' v='1.1.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.servlet'/>
    <p n='version' t='version' v='2.5.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.servlet.http'/>
    <p n='uses' v='javax.servlet'/>
    <p n='version' t='version' v='2.5.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.net.ssl
  </require>
  <require extend='false' filter='(&amp;(package=javax.security.cert)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.security.cert
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet ;version=2.5.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet.http ;version=2.5.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.http ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.slf4j
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.xml.sax
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.xml.sax.helpers
  </require>
</resource>
<resource id='org.apache.felix.scr/1.0.8' presentationname='Apache Felix Declarative Services' symbolicname='org.apache.felix.scr' uri='../bundles/org.apache.felix.scr-1.0.8.jar' version='1.0.8'>
  <description>
    Implementation of the Declarative Services specification 1.0
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.scr/1.0.8/org.apache.felix.scr-1.0.8.jar
  </remote-url>
  <size>
    112059
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.apache.felix.scr.ScrService'/>
    <p n='service.description' v='Declarative Services Management Agent'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.apache.felix.shell.Command'/>
    <p n='service.description' v='Declarative Services Shell Commands'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='service.component.runtime'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Declarative Services'/>
    <p n='symbolicname' v='org.apache.felix.scr'/>
    <p n='version' t='version' v='1.0.8'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.component'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.scr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.8'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=1.0.8))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.scr ;version=1.0.8
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.component ;version=1.0.0
  </require>
</resource>
<resource id='org.apache.felix.fileinstall/1.0.0' presentationname='Apache Felix File Install' symbolicname='org.apache.felix.fileinstall' uri='../bundles/org.apache.felix.fileinstall-1.0.0.jar' version='1.0.0'>
  <description>
    A utility to automatically install bundles from a directory.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.fileinstall/1.0.0/org.apache.felix.fileinstall-1.0.0.jar
  </remote-url>
  <size>
    32312
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix File Install'/>
    <p n='symbolicname' v='org.apache.felix.fileinstall'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.fileinstall'/>
    <p n='uses' v='org.osgi.service.packageadmin,org.osgi.service.log,org.osgi.framework,org.osgi.util.tracker,org.osgi.service.cm,org.apache.felix.fileinstall.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.fileinstall.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='uses' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.fileinstall
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.fileinstall.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.fileinstall.util
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.packageadmin ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
</resource>
<resource id='org.apache.felix.webconsole/1.2.10' presentationname='Apache Felix Web Management Console' symbolicname='org.apache.felix.webconsole' uri='../bundles/org.apache.felix.webconsole-1.2.10.jar' version='1.2.10'>
  <description>
    Web Based Management Console for OSGi Frameworks. See
       http://felix.apache.org/apache-felix-web-console.html for
     more        information on this bundle.
  </description>
  <documentation>
    http://felix.apache.org/site/apache-felix-web-console.html
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.webconsole/1.2.10/org.apache.felix.webconsole-1.2.10.jar
  </remote-url>
  <size>
    512659
  </size>
  <category id='org.apache.felix'/>
  <capability name='service'>
    <p n='service' v='org.osgi.service.cm.ManagedService'/>
    <p n='service.description' v='OSGi Management Console Configuration Receiver'/>
    <p n='service.pid' v='org.apache.felix.webconsole.internal.servlet.OsgiManager'/>
    <p n='service.vendor' v='The Apache Software Foundation'/>
  </capability>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix Web Management Console'/>
    <p n='symbolicname' v='org.apache.felix.webconsole'/>
    <p n='version' t='version' v='1.2.10'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.webconsole'/>
    <p n='uses:' v='javax.servlet,org.osgi.framework,javax.servlet.http'/>
    <p n='version' t='version' v='1.2.10'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.obr'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.0.0'/>
  </capability>
  <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='false' name='service' optional='true'>
    Import Service org.osgi.service.log.LogService
  </require>
  <require extend='false' filter='(service=javax.servlet.Servlet)' multiple='true' name='service' optional='true'>
    Import Service javax.servlet.Servlet
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Render)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Render
  </require>
  <require extend='false' filter='(service=org.apache.felix.webconsole.Action)' multiple='true' name='service' optional='true'>
    Import Service org.apache.felix.webconsole.Action
  </require>
  <require extend='false' filter='(service=org.osgi.service.http.HttpService)' multiple='false' name='service' optional='false'>
    Import Service org.osgi.service.http.HttpService
  </require>
  <require extend='false' filter='(&amp;(package=javax.portlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.portlet
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet.http
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.scr
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.apache.felix.shell ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.webconsole)(version&gt;=1.2.10))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.webconsole ;version=1.2.10
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.cm
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.component
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.deploymentadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.deploymentadmin
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.event
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.http
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.log
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.metatype
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.obr ;version=1.0.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.packageadmin
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.prefs
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.osgi.service.startlevel
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.xml.sax
  </require>
</resource>
<resource id='org.apache.felix.upnp.tester/0.4.0' presentationname='Apache Felix UPnP Tester' symbolicname='org.apache.felix.upnp.tester' uri='../bundles/org.apache.felix.upnp.tester-0.4.0.jar' version='0.4.0'>
  <description>
    OSGi Generic Control Point to control UPnPDevice services
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.upnp.tester/0.4.0/org.apache.felix.upnp.tester-0.4.0.jar
  </remote-url>
  <size>
    79173
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix UPnP Tester'/>
    <p n='symbolicname' v='org.apache.felix.upnp.tester'/>
    <p n='version' t='version' v='0.4.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.upnp.tester'/>
    <p n='uses' v='org.osgi.framework,javax.swing,org.apache.felix.upnp.tester.discovery,org.apache.felix.upnp.tester.gui,javax.swing.event,org.osgi.service.upnp'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.upnp.tester.gui'/>
    <p n='uses' v='org.apache.felix.upnp.tester,javax.swing,javax.swing.table,org.osgi.service.upnp,org.apache.felix.upnp.basedriver.util,javax.swing.event,javax.swing.tree,org.apache.felix.upnp.tester.discovery,org.osgi.framework'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.upnp.tester.discovery'/>
    <p n='uses' v='org.osgi.service.upnp,org.osgi.framework,org.apache.felix.upnp.tester,org.apache.felix.upnp.tester.gui,org.apache.felix.upnp.basedriver.controller'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.event
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.table
  </require>
  <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package javax.swing.tree
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.upnp.basedriver.controller)(version&gt;=0.1.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.upnp.basedriver.controller
     ;version=0.1.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.upnp.basedriver.util)(version&gt;=0.3.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.upnp.basedriver.util ;version=0.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.upnp.tester)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.upnp.tester
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.upnp.tester.discovery)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.upnp.tester.discovery
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.upnp.tester.gui)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.upnp.tester.gui
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.upnp)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.upnp ;version=1.1.0
  </require>
</resource>
<resource id='org.apache.felix.upnp.extra/0.4.0' presentationname='Apache Felix UPnP Extra' symbolicname='org.apache.felix.upnp.extra' uri='../bundles/org.apache.felix.upnp.extra-0.4.0.jar' version='0.4.0'>
  <description>
    A library used to extend the integration between UPnP and OSGi
     that is not part of the standard. Also services that allow
     to change the beahviour of the UPnP Base Driver
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.upnp.extra/0.4.0/org.apache.felix.upnp.extra-0.4.0.jar
  </remote-url>
  <size>
    16844
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix UPnP Extra'/>
    <p n='symbolicname' v='org.apache.felix.upnp.extra'/>
    <p n='version' t='version' v='0.4.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.upnp.extra.util'/>
    <p n='uses' v='org.osgi.service.upnp,org.osgi.framework'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.upnp.extra.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.upnp.extra.util
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.upnp)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.upnp ;version=1.1.0
  </require>
</resource>
<resource id='org.apache.felix.http.jetty/1.0.1' presentationname='Apache Felix HTTP Service Jetty' symbolicname='org.apache.felix.http.jetty' uri='../bundles/org.apache.felix.http.jetty-1.0.1.jar' version='1.0.1'>
  <description>
    An implementation of the OSGi HTTP Service
                using Jetty.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <remote-url>
    http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.http.jetty/1.0.1/org.apache.felix.http.jetty-1.0.1.jar
  </remote-url>
  <size>
    769503
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='HTTP Service'/>
    <p n='symbolicname' v='org.apache.felix.http.jetty'/>
    <p n='version' t='version' v='1.0.1'/>
  </capability>
  <capability name='service'>
    <p n='service' v='org.osgi.service.http.HttpService'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.http'/>
    <p n='uses' v='javax.servlet.http,javax.servlet'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.servlet'/>
    <p n='version' t='version' v='2.5.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='javax.servlet.http'/>
    <p n='uses' v='javax.servlet'/>
    <p n='version' t='version' v='2.5.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.net.ssl
  </require>
  <require extend='false' filter='(&amp;(package=javax.security.cert)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.security.cert
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet ;version=2.5.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
    Import package javax.servlet.http ;version=2.5.0
  </require>
  <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package javax.xml.parsers
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.http ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.slf4j
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.xml.sax
  </require>
  <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
    Import package org.xml.sax.helpers
  </require>
</resource>
<resource id='org.apache.felix.fileinstall/1.2.0' presentationname='Apache Felix File Install' symbolicname='org.apache.felix.fileinstall' uri='../org/apache/felix/org.apache.felix.fileinstall/1.2.0/org.apache.felix.fileinstall-1.2.0.jar' version='1.2.0'>
  <description>
    A utility to automatically install bundles from a directory.
  </description>
  <documentation>
    http://www.apache.org/
  </documentation>
  <license>
    http://www.apache.org/licenses/LICENSE-2.0.txt
  </license>
  <size>
    33136
  </size>
  <category id='org.apache.felix'/>
  <capability name='bundle'>
    <p n='manifestversion' v='2'/>
    <p n='presentationname' v='Apache Felix File Install'/>
    <p n='symbolicname' v='org.apache.felix.fileinstall'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.log'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.3.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.fileinstall'/>
    <p n='uses:' v='org.osgi.service.packageadmin,org.osgi.service.log,org.osgi.framework,org.osgi.util.tracker,org.apache.felix.fileinstall.util,org.osgi.service.cm'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.apache.felix.fileinstall.util'/>
    <p n='version' t='version' v='0.0.0'/>
  </capability>
  <capability name='package'>
    <p n='package' v='org.osgi.service.cm'/>
    <p n='uses:' v='org.osgi.framework'/>
    <p n='version' t='version' v='1.2.0'/>
  </capability>
  <require extend='false' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.fileinstall
  </require>
  <require extend='false' filter='(&amp;(package=org.apache.felix.fileinstall.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
    Import package org.apache.felix.fileinstall.util
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.framework ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.cm ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.log ;version=1.3.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.service.packageadmin ;version=1.2.0
  </require>
  <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
    Import package org.osgi.util.tracker ;version=1.3.0
  </require>
</resource>
</repository>